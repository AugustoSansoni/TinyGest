//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Estro.TinyGest.Entities
{
    public partial class OrderNote
    {
        #region Primitive Properties
    
        public virtual int OrderNoteId
        {
            get;
            set;
        }
    
        public virtual System.DateTime CreationDate
        {
            get;
            set;
        }
    
        public virtual string Text
        {
            get;
            set;
        }
    
        public virtual int OrderId
        {
            get { return _orderId; }
            set
            {
                if (_orderId != value)
                {
                    if (Order != null && Order.OrderId != value)
                    {
                        Order = null;
                    }
                    _orderId = value;
                }
            }
        }
        private int _orderId;

        #endregion
        #region Navigation Properties
    
        public virtual Order Order
        {
            get { return _order; }
            set
            {
                if (!ReferenceEquals(_order, value))
                {
                    var previousValue = _order;
                    _order = value;
                    FixupOrder(previousValue);
                }
            }
        }
        private Order _order;

        #endregion
        #region Association Fixup
    
        private void FixupOrder(Order previousValue)
        {
            if (previousValue != null && previousValue.Notes.Contains(this))
            {
                previousValue.Notes.Remove(this);
            }
    
            if (Order != null)
            {
                if (!Order.Notes.Contains(this))
                {
                    Order.Notes.Add(this);
                }
                if (OrderId != Order.OrderId)
                {
                    OrderId = Order.OrderId;
                }
            }
        }

        #endregion
    }
}
