//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Estro.TinyGest.Entities
{
    public partial class InvoiceLine
    {
        #region Primitive Properties
    
        public virtual int InvoiceLineId
        {
            get;
            set;
        }
    
        public virtual int Line
        {
            get;
            set;
        }
    
        public virtual string ProductName
        {
            get;
            set;
        }
    
        public virtual string SmallText
        {
            get;
            set;
        }
    
        public virtual int NumberOfItems
        {
            get;
            set;
        }
    
        public virtual decimal SubTotal
        {
            get;
            set;
        }
    
        public virtual int InvoiceId
        {
            get { return _invoiceId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_invoiceId != value)
                    {
                        if (Invoice != null && Invoice.InvoiceId != value)
                        {
                            Invoice = null;
                        }
                        _invoiceId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private int _invoiceId;
    
        public virtual Nullable<int> ProductId
        {
            get { return _productId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_productId != value)
                    {
                        if (ProductRef != null && ProductRef.ProductId != value)
                        {
                            ProductRef = null;
                        }
                        _productId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _productId;
    
        public virtual int Quantity
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual Invoice Invoice
        {
            get { return _invoice; }
            set
            {
                if (!ReferenceEquals(_invoice, value))
                {
                    var previousValue = _invoice;
                    _invoice = value;
                    FixupInvoice(previousValue);
                }
            }
        }
        private Invoice _invoice;
    
        public virtual Product ProductRef
        {
            get { return _productRef; }
            set
            {
                if (!ReferenceEquals(_productRef, value))
                {
                    var previousValue = _productRef;
                    _productRef = value;
                    FixupProductRef(previousValue);
                }
            }
        }
        private Product _productRef;

        #endregion
        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupInvoice(Invoice previousValue)
        {
            if (previousValue != null && previousValue.Lines.Contains(this))
            {
                previousValue.Lines.Remove(this);
            }
    
            if (Invoice != null)
            {
                if (!Invoice.Lines.Contains(this))
                {
                    Invoice.Lines.Add(this);
                }
                if (InvoiceId != Invoice.InvoiceId)
                {
                    InvoiceId = Invoice.InvoiceId;
                }
            }
        }
    
        private void FixupProductRef(Product previousValue)
        {
            if (ProductRef != null)
            {
                if (ProductId != ProductRef.ProductId)
                {
                    ProductId = ProductRef.ProductId;
                }
            }
            else if (!_settingFK)
            {
                ProductId = null;
            }
        }

        #endregion
    }
}
